openapi: 3.0.0
info:
  title: Pages V3
  version: '3.0'
  description: 'Manage content pages, such as contact forms, rss feeds, and custom HTML pages. All endpoints without a `pageId` path parameter support bulk operations.'
  termsOfService: 'http://www.bigcommerce.com/terms'
tags:
  - name: Pages
security:
- X-Auth-Token: []
paths:
  '/stores/{store_hash}/v3/content/pages':
    get:
      operationId: content-pages-get
      tags:
        - Pages
      description: Returns one or more content pages. This endpoint supports bulk operations.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCollectionResponse'
              examples:
                example-1:
                  value:
                    data:
                      - id: 1
                        channel_id: 1
                        name: Content page
                        meta_title: Content page
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        type: page
                        meta_keywords: ''
                        meta_description: string
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: string
                        content_type: text/html
                        url: /my-content-page
                      - id: 2
                        channel_id: 1
                        name: Feed page
                        meta_title: string
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 3
                        feed: 'https://bigcommerce.com/feed/'
                        type: feed
                        meta_keywords: ''
                        meta_description: string
                        is_homepage: false
                        is_customers_only: true
                        search_keywords: string
                        content_type: text/html
                        url: /rss-feed-page
                      - id: 3
                        channel_id: 1
                        name: Link page
                        meta_title: ''
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        link: '1'
                        type: link
                        meta_keywords: ''
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                        content_type: text/html
                    meta:
                      pagination:
                        total: 3
                        count: 3
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          current: '?page=1&limit=50'
        '400':
          description: 'Bad Request; reasons for failure include passing query parameters that are not support on this endpoint, but are common on other BigCommerce endpoints.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '422':
          description: Invalid input. Reasons for failure include passing supported parameters with values that have the incorrect datatype.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ListedErrorResponse'
      parameters:
        - schema:
            type: integer
          in: query
          name: channel_id
          description: Return only pages associated with the specified channel.
        - schema:
            type: string
          in: query
          name: 'id:in'
          description: 'A comma-separated string of page IDs to fetch. Supports bulk operations. If none of the page IDs passed exist, the query will return an empty `data` array.'
        - schema:
            type: string
          in: query
          name: name
          description: Name of the page.
        - schema:
            type: string
          in: query
          name: 'name:like'
          description: One word from the name of the page. Does not search substrings. Does not return pages with names that match exactly. Does not support fuzzy search.
        - schema:
            type: integer
          in: query
          name: limit
          description: The number of results to return per request. See `meta.pagination.per_page` in the response body.
        - schema:
            type: integer
          in: query
          name: page
          description: The ordered grouping of results to return. See `meta.pagination.current_page` in the response body.
      summary: Get Pages
    post:
      operationId: content-pages-post
      description: Creates one or more content pages. This endpoint supports bulk operations.
      tags:
        - Pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
            examples:
              example-1:
                value:
                  channel_id: 1
                  name: Content Page
                  is_visible: false
                  parent_id: 0
                  sort_order: 0
                  type: page
                  body: <div>Hello World!</div>
                  is_homepage: false
                  meta_title: My Content page
                  meta_keywords: string
                  meta_description: string
                  search_keywords: string
                  url: /my-content-page
        description: ''
        required: true
      responses:
        '201':
          description: |-
            Created.

            Response.data will inherit the datatype of the request. A single entry passed as an object will return an object for the data property. Any number of entries passed in an array will return an array for the data property.

            Properties associated with a page `type` that are not required to create an entry will be created with default values. 

            When making bulk requests, an invalid input in any one entry will return 422. The entries that are valid will still be created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    oneOf:
                      - type: object
                        properties:
                          data:
                            $ref: '#/components/schemas/Page'
                      - type: array
                        items:
                          type: object
                          properties:
                            data:
                              $ref: '#/components/schemas/PageBase'
                  meta:
                    $ref: '#/components/schemas/CollectionMeta'
        '207':
          $ref: '#/components/responses/HTTP207Response'
        '422':
          description: |-
            The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.

            When making bulk requests, an invalid input in any one entry will cause the whole request to return 422. The entries that are valid will still be created.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
      summary: Create Pages
    put:
      operationId: content-pages-put
      description: Updates one or more content pages. This endpoint supports bulk operations.
      tags:
        - Pages
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PagePutBulk'
                - type: array
                  items:
                    $ref: '#/components/schemas/PagePutBulk'
      responses:
        '200':
          description: |
            Updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagesCollectionResponse'
              examples:
                update meta descriptions for two  pages:
                  value:
                    data:
                      - id: 20
                        channel_id: 1
                        name: all about powder detergents
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        type: page
                        meta_description: cornpone
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 19
                        channel_id: 1
                        name: sign up to dream big
                        meta_title: ''
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        contact_fields: ''
                        type: contact_form
                        meta_description: arugula
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                    meta: {}
        '207':
          $ref: '#/components/responses/HTTP207Response'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    status: 0
                    title: string
                    type: string
        '422':
          description: The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
              examples:
                missing required field for type raw:
                  value:
                    status: 422
                    title: Input is invalid
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    detail: 'missing the required field: body'
      summary: Update Pages
    delete:
      operationId: content-pages-delete
      tags:
        - Pages
      description: |-
        Deletes one or more content pages. This endpoint supports bulk operations.

        <!-- theme: warning -->
        > #### Mind query parameters
        > If you attempt to delete multiple pages by passing more than one pageId to `id:in` and one or more of them does not exist, you will receive a 404 response. However, the pages corresponding to the pagesIds that do exist will still be deleted.
      responses:
        '204':
          description: No content. A 204 response with no payload indicates successful deletion of all specified pages.
        '404':
          description: Not Found. One of more of the pages specified for deletion did not exist. Specified pages that did exist were successfully deleted.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Page not found:
                  value:
                    status: 404
                    title: A Page was not found with an id of 100
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        '422':
          description: Invalid input. See response for details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
              examples:
                Missing ID:
                  value:
                    status: 422
                    title: Input is invalid
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    detail: 'missing the required field: id'
      parameters:
        - schema:
            type: string
          in: query
          name: 'id:in'
          description: 'Request deletion of multiple pages by passing a comma-separated string of corresponding page IDs. Supports bulk operations. '
          required: true
      summary: Delete Pages
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
        description: The merchant's store hash. Also called a store id.
  '/stores/{store_hash}/v3/content/pages/{pageId}':
    get:
      operationId: content-page-get
      tags:
        - Pages
      description: |-
        Returns one content page.

        <!-- theme: warning -->
        > #### Mind query parameters
        > This endpoint recognizes the same query parameters as [Get Multiple Pages](/api-reference/store-management/pages/pages/getpages). If the requested page does not meet the query parameters you specify, you will receive a 404 response even if the requested pageId does exist.
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
              examples:
                several data types:
                  value:
                    data:
                      - id: 3
                        channel_id: 1
                        name: Blog
                        meta_title: Blog
                        is_visible: false
                        parent_id: 0
                        sort_order: 4
                        meta_keywords: ''
                        type: blog
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: '0'
                        url: /blog/
                      - id: 5
                        channel_id: 1
                        name: Contact Us
                        meta_title: ''
                        email: ''
                        is_visible: true
                        parent_id: 0
                        sort_order: 3
                        meta_keywords: contact keyword
                        contact_fields: 'fullname,companyname,phone,orderno,rma'
                        type: contact_form
                        meta_description: contact meta desc
                        is_homepage: false
                        is_customers_only: true
                        search_keywords: contact search keyword
                      - id: 16
                        channel_id: 1
                        name: all about powder detergents 2
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        type: page
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 17
                        channel_id: 1
                        name: one hundred million red balloons 3
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        type: raw
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                        content_type: text/html
                      - id: 18
                        channel_id: 1
                        name: diaper pin purveyors 3
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        link: 'https://example.com/diaper-pins'
                        type: link
                        is_homepage: false
                        is_customers_only: false
                      - id: 19
                        channel_id: 1
                        name: sign up to crush dreams 3
                        meta_title: ''
                        email: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        contact_fields: ''
                        type: contact_form
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 20
                        channel_id: 1
                        name: all about powder detergents 3
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        type: page
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 21
                        channel_id: 1
                        name: feed monsters 3
                        meta_title: ''
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        meta_keywords: null
                        feed: /rss/monsters
                        type: feed
                        meta_description: ''
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                      - id: 22
                        channel_id: 1
                        name: one hundred million red balloons 4
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        type: raw
                        is_homepage: false
                        is_customers_only: false
                        search_keywords: ''
                        content_type: text/html
                      - id: 23
                        channel_id: 1
                        name: diaper pin purveyors 4
                        is_visible: false
                        parent_id: 0
                        sort_order: 0
                        link: 'https://example.com/diaper-pins'
                        type: link
                        is_homepage: false
                        is_customers_only: false
                    meta:
                      pagination:
                        total: 6
                        count: 6
                        per_page: 50
                        current_page: 1
                        total_pages: 1
                        links:
                          current: '?page=1&limit=50'
        '404':
          description: Not Found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                pageId does not exist:
                  value:
                    status: 404
                    title: A Page was not found with an id of 99
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        '422':
          description: Invalid input. One or more path parameter(s) did not have the incorrect datatype.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ListedErrorResponse'
              examples:
                pageId is bar:
                  value:
                    status: 422
                    title: Invalid Input.
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    errors:
                      - bar
      parameters: []
      summary: Get a Page
    put:
      operationId: content-page-put
      description: Updates one content page.
      tags:
        - Pages
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PagePut'
        description: ''
        required: true
      responses:
        '200':
          description: |+

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageResponse'
        '207':
          $ref: '#/components/responses/HTTP207Response'
        '400':
          description: Bad Request; reasons for failure include invalid query parameters. See the response for more details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not found:
                  value:
                    status: 404
                    title: A Page was not found with an id of 99
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        '422':
          description: The input was not valid. This is the result of missing required fields or other invalid arguments. See the response for more details.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/DetailedErrorResponse'
      summary: Update a Page
    delete:
      operationId: content-page-delete
      tags:
        - Pages
      description: |-
        Deletes one content page.

        <!-- theme: info -->
        > #### Query parameters
        > This endpoint does not recognize query parameters.
      responses:
        '204':
          description: No content. A 204 response with no payload indicates successful deletion.
        '404':
          description: The page specified for deletion did not exist.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                example-1:
                  value:
                    status: 404
                    title: A Page was not found with an id of 99
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
      parameters: []
      summary: Delete a Page
    parameters:
      - schema:
          type: string
        name: store_hash
        in: path
        required: true
        description: The merchant's store hash. Also called a store id.
      - schema:
          type: string
        name: pageId
        in: path
        required: true
        description: The id of the page to be operated on.
servers:
  - url: 'https://api.bigcommerce.com'
    description: Pages API Gateway
    variables:
      store_hash:
        default: abc123
        description: Store hash used to identify the store.
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
components:
  schemas:
    BaseError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
      required:
        - status
    DetailedError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        detail:
          type: string
      required:
        - status
    ListedError:
      type: object
      description: |
        Error payload for the BigCommerce API.
      title: ListedError
      properties:
        status:
          description: |
            The HTTP status code.
          type: integer
        title:
          description: |
            The error title describing the particular error.
          type: string
        type:
          type: string
        errors:
          type: array
          items:
            type: string
      required:
        - status
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseError'
      title: ListedErrorResponse
    ListedErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ListedError'
    DetailedErrorResponse:
      allOf:
        - $ref: '#/components/schemas/DetailedError'
    CollectionMeta:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
    PagesCollectionResponse:
      description: |
        Response payload for the BigCommerce API.
      type: object
      title: ''
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Page'
        meta:
          $ref: '#/components/schemas/CollectionMeta'
    PageResponse:
      description: |
        Response payload for the BigCommerce API.
      x-examples: {}
      allOf:
        - properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Page'
            meta:
              $ref: '#/components/schemas/CollectionMeta'
      title: PageResponseObject
      type: object
    ContactFields:
      allOf:
        - properties:
            fullname:
              type: string
              description: Full name of the customer submitting the form.
            phone:
              type: string
              description: 'Customer’s phone number, as submitted on the form.'
            companyname:
              type: string
              description: Customer’s submitted company name.
            orderno:
              type: string
              description: Customer’s submitted order number.
            rma:
              type: string
              description: Customer’s submitted RMA (Return Merchandise Authorization) number.
      type: object
    PagePutBulk:
      type: object
      description: Page modification request body properties.
      properties:
        name:
          type: string
          description: |
            The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          example: My Store Page
        is_visible:
          type: boolean
          description: |
            Determines the visibility of the page in the storefront’s navigation menu.
        parent_id:
          type: integer
          description: |
            ID of any parent Web page.
          example: 0
          default: 0
        sort_order:
          type: integer
          description: |
            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)
          example: 0
          default: 0
        type:
          type: string
          description: |-
            Determines the type of the page.

            |Value|Description|
            |-|-|
            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |
            |`contact_form`|hosts the store's contact form|
            |`link`|link to another absolute URL|
            |`page`|user-defined plain-text page|
            |`raw`|page that contains markup, such as HTML.|
            |`rss_feed`|contains syndicated content from an RSS feed|
          example: page
          enum:
            - page
            - raw
            - contact_form
            - feed
            - link
            - blog
        is_homepage:
          type: boolean
          description: |
            Determines whether this page is the storefront’s home page.
        is_customers_only:
          type: boolean
          description: |
            If `true`, this page will not be visible when logged in to the store control panel.
        id:
          type: integer
          description: The id of the target page
        email:
          type: string
          description: 'Where the page’s type is a contact form: contact email address that receives messages sent via the form. Must be unique.'
          maxLength: 255
        meta_title:
          type: string
        body:
          type: string
          description: |
            HTML or variable that populates this page’s  element, in default/desktop view. Required in a `POST` request if the page type is `raw`.
          example: <div>Hello World!</div>
          writeOnly: true
        feed:
          type: string
          description: |
            The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
        link:
          type: string
          description: |
            Required in a `POST` request to create a link if the page type is `link`.
        contact_fields:
          type: string
          description: |
            Where the page’s type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:

            |Field|Description|
            |-|-|
            |`fullname`|Full name of the customer submitting the form|
            |`phone`|Customer’s phone number, as submitted on the form|
            |`companyname`|Customer’s submitted company name|
            |`orderno`|Customer’s submitted order number|
            |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|
          example: 'fullname,companyname,phone,orderno,rma'
          enum:
            - fullname
            - phone
            - companyname
            - phone
            - orderno
        meta_keywords:
          type: string
          description: |
            Comma-separated list of SEO-relevant keywords to include in the page’s  element.
        meta_description:
          type: string
          description: |
            Description contained within this page’s  element.
        search_keywords:
          type: string
          description: |
            Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
          example: 'trousers,pockets,luxury'
        url:
          type: string
          description: |
            Relative URL on the storefront for this page.
          example: /my-store-page
        channel_id:
          type: integer
          description: |
            The Id of the channel where this page should be shown.
          example: 12
          default: 0
      required:
        - id
    PagePut:
      type: object
      description: Page modification request body properties.
      properties:
        name:
          type: string
          description: |
            The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          example: My Store Page
        is_visible:
          type: boolean
          description: |
            Determines the visibility of the page in the storefront’s navigation menu.
        parent_id:
          type: integer
          description: |
            ID of any parent Web page.
          example: 0
          default: 0
        sort_order:
          type: integer
          description: |
            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)
          example: 0
          default: 0
        type:
          type: string
          description: |-
            Determines the type of the page.

            |Value|Description|
            |-|-|
            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |
            |`contact_form`|hosts the store's contact form|
            |`link`|link to another absolute URL|
            |`page`|user-defined plain-text page|
            |`raw`|page that contains markup, such as HTML.|
            |`rss_feed`|contains syndicated content from an RSS feed|
          example: page
          enum:
            - page
            - raw
            - contact_form
            - feed
            - link
            - blog
        is_homepage:
          type: boolean
          description: |
            Determines whether this page is the storefront’s home page.
        is_customers_only:
          type: boolean
          description: |
            If `true`, this page will not be visible when logged in to the store control panel.
        email:
          type: string
          description: 'Where the page’s type is a contact form: contact email address that receives messages sent via the form. Must be unique.'
          maxLength: 255
        meta_title:
          type: string
        body:
          type: string
          description: |
            HTML or variable that populates this page’s  element, in default/desktop view. Required in a `POST` request if the page type is `raw`.
          example: <div>Hello World!</div>
          writeOnly: true
        feed:
          type: string
          description: |
            The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
        link:
          type: string
          description: |
            Required in a `POST` request to create a link if the page type is `link`.
        contact_fields:
          type: string
          description: |
            Where the page’s type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:

            |Field|Description|
            |-|-|
            |`fullname`|Full name of the customer submitting the form|
            |`phone`|Customer’s phone number, as submitted on the form|
            |`companyname`|Customer’s submitted company name|
            |`orderno`|Customer’s submitted order number|
            |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|
          example: 'fullname,companyname,phone,orderno,rma'
          enum:
            - fullname
            - phone
            - companyname
            - phone
            - orderno
        meta_keywords:
          type: string
          description: |
            Comma-separated list of SEO-relevant keywords to include in the page’s  element.
        meta_description:
          type: string
          description: |
            Description contained within this page’s  element.
        search_keywords:
          type: string
          description: |
            Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
          example: 'trousers,pockets,luxury'
        url:
          type: string
          description: |
            Relative URL on the storefront for this page.
          example: /my-store-page
        channel_id:
          type: integer
          description: |
            The Id of the channel where this page should be shown.
          example: 12
          default: 0
      required:
        - id
    Page:
      allOf:
        - type: object
          properties:
            email:
              type: string
              description: 'Where the page’s type is a contact form: contact email address that receives messages sent via the form. Must be unique.'
              maxLength: 255
              default: ''
            meta_title:
              type: string
              default: ''
            body:
              type: string
              description: |
                HTML or variable that populates this page’s  element, in default/desktop view. Required in a `POST` request if the page type is `raw`.
              example: <div>Hello World!</div>
              writeOnly: true
            feed:
              type: string
              description: |
                The URL of the RSS feed. Required in a `POST` request if the page type is `rss_feed`.
            link:
              type: string
              description: |
                Required in a `POST` request to create a link if the page type is `link`.
            contact_fields:
              type: string
              description: |
                Where the page’s type is `contact_form`: comma-separated list of keywords representing the fields enabled in the control panel for storefront display. Possible fields include:

                |Field|Description|
                |-|-|
                |`fullname`|Full name of the customer submitting the form|
                |`phone`|Customer’s phone number, as submitted on the form|
                |`companyname`|Customer’s submitted company name|
                |`orderno`|Customer’s submitted order number|
                |`rma`|Customer’s submitted RMA (Return Merchandise Authorization) number|
              example: 'fullname,companyname,phone,orderno,rma'
              default: ''
              enum:
                - fullname
                - phone
                - companyname
                - phone
                - orderno
            meta_keywords:
              type: string
              description: |
                Comma-separated list of SEO-relevant keywords to include in the page’s  element.
              default: ''
            meta_description:
              type: string
              description: |
                Description contained within this page’s  element.
              default: ''
            search_keywords:
              type: string
              description: |
                Comma-separated list of keywords that shoppers can use to locate this page when searching the store.
              example: 'trousers,pockets,luxury'
              default: ''
            url:
              type: string
              description: |
                Relative URL on the storefront for this page.
              example: /my-store-page
            channel_id:
              type: integer
              description: |
                The Id of the channel where this page should be shown.
              example: 12
              default: 1
        - $ref: '#/components/schemas/PageBase'
      title: ''
      description: ''
    PageBase:
      type: object
      description: Common Page properties.
      properties:
        name:
          type: string
          description: |
            The name of the page. Must be unique.
          minLength: 1
          maxLength: 100
          example: My Store Page
        is_visible:
          type: boolean
          description: |
            Determines the visibility of the page in the storefront’s navigation menu.
        parent_id:
          type: integer
          description: |
            ID of any parent Web page.
          example: 0
          default: 0
        sort_order:
          type: integer
          description: |
            Determines the order in which the page is displayed on the storefront. (Lower integers specify earlier display.)
          example: 0
          default: 0
        type:
          type: string
          description: |-
            Determines the type of the page.

            |Value|Description|
            |-|-|
            | `blog` | blog page. Read-only; blog pages can only be created in the store control panel. |
            |`contact_form`|hosts the store's contact form|
            |`link`|link to another absolute URL|
            |`page`|user-defined plain-text page|
            |`raw`|page that contains markup, such as HTML.|
            |`rss_feed`|contains syndicated content from an RSS feed|
          example: page
          enum:
            - page
            - raw
            - contact_form
            - feed
            - link
            - blog
        is_homepage:
          type: boolean
          description: |
            Determines whether this page is the storefront’s home page.
        is_customers_only:
          type: boolean
          description: |
            If `true`, this page will only be visible to customers that are logged in to the store.
      required:
        - name
        - type
    Pagination:
      type: object
      description: |
        Data about the response, including pagination and collection totals.
      properties:
        total:
          type: integer
          description: |
            Total number of items in the result set.
        count:
          type: integer
          description: |
            Total number of items in the collection response.
        per_page:
          type: integer
          description: |
            The amount of items returned in the collection per page, controlled by the limit parameter.
        current_page:
          type: integer
          description: |
            The page you are currently on within the collection.
        total_pages:
          type: integer
          description: |
            The total number of pages in the collection.
        links:
          type: object
          description: |
            Pagination links for the previous and next parts of the whole collection.
          properties:
            previous:
              type: string
              description: |
                Link to the previous page returned in the response.
            current:
              type: string
              description: |
                Link to the current page returned in the response.
            next:
              type: string
              description: |
                Link to the next page returned in the response.
    PageFull:
      title: PageFull
      allOf:
        - $ref: '#/components/schemas/Page'
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      type: apiKey
      in: header
  responses:
    HTTP207Response:
      description: 'Multiple operations have taken place and the status for each operation can be viewed in the body of the response. Typically indicates that a partial failure has occured, such as when a `POST` or `PUT` request is successful, but saving the URL has failed.'
      content:
        application/json:
          schema: {}
